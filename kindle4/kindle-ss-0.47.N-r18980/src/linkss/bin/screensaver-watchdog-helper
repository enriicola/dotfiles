#!/bin/sh
#
# $Id: screensaver-watchdog-helper 15011 2018-06-02 16:58:21Z NiLuJe $
#

# Get hackname from the script's path (NOTE: Will only work for scripts called from /mnt/us/${KH_HACKNAME}/bin)
KH_HACKNAME="${0##/mnt/us/}"
KH_HACKNAME="${KH_HACKNAME%%/bin/*}"

# Try to pull our custom helper lib
_KH_FUNCS="/mnt/us/${KH_HACKNAME}/bin/libkh"
if [ -f ${_KH_FUNCS} ] ; then
    . ${_KH_FUNCS}
else
    # Pull default helper functions for logging
    _FUNCTIONS=/etc/rc.d/functions
    [ -f ${_FUNCTIONS} ] && . ${_FUNCTIONS}
    # We couldn't get our custom lib, abort
    msg "couldn't source libkh from '${KH_HACKNAME}'" W
    exit 0
fi

# Make sure shlock is exec'able
[ -x ${SSWD_LOCK_BIN} ] || chmod +x ${SSWD_LOCK_BIN}
# Make sure our lockfile has somewhere to live
[ -d ${SSWD_LOCK_DIR} ] || mkdir -p ${SSWD_LOCK_DIR}

# Add the PID of the lipc-wait-event(s) to the list of running daemons to kill
echo "$( pidof lipc-wait-event )" >> ${SS_WATCHDOG_PID}
# Add our PID to the list of running daemons to kill
echo "$$" >> ${SS_WATCHDOG_PID}

# The event we're hooking has no args on FW 2.x...
if [ "${IS_K2}" == "true" ] ; then
    goto_ss_event="goingToScreenSaver"
else
    goto_ss_event="goingToScreenSaver [23]"
fi

while read line ; do
    # Did we really go to screensaver?
    if echo "${line}" | grep -q "${goto_ss_event}" ; then
        # Yep, we did! Now check if we also just switched cover, and let's do our stuff in a locked session...
        if [ -f "${LINKSS_BASEDIR}/etc/switched_cover" ] ; then
            if ${SSWD_LOCK_BIN} -p $$ -f ${SSWD_LOCK_FILE} ; then
                # We only want to do this on the first sleep after a switch, so kill the flag file
                rm -f "${LINKSS_BASEDIR}/etc/switched_cover"
                # Log it
                kh_msg "forcing screensaver via watchdog" I q
                # NOTE: It seems to work fine in most cases, even under heavy load, but sometimes, a sleep might be needed here...
                # Go without by default, because it's far more pleasing than showing one screen, then a different one a second later...
                # But make it configurable :)
                if [ -f "${LINKSS_BASEDIR}/sleep" ] ; then
                    # Wait 1.5s
                    usleep 1500000
                fi
                # Actually do what we came here for ;)
                eips -f -g "${LINKSS_TMPFS_COVERDIR}/current_book_cover.png"
                # And then remove our lock file
                rm -rf ${SSWD_LOCK_FILE}
            else
                # Unreachable?
                kh_msg "we're already forcing the screensaver via watchdog, go away" W a "screensaver force already in progress"
            fi
        fi
    fi
done
